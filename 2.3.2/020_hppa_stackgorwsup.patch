diff -urN glibc-2.3.2.orig/linuxthreads/manager.c glibc-2.3.2/linuxthreads/manager.c
--- glibc-2.3.2.orig/linuxthreads/manager.c	2003-10-14 02:14:24.000000000 -0400
+++ glibc-2.3.2/linuxthreads/manager.c	2003-10-14 02:16:35.000000000 -0400
@@ -69,8 +69,13 @@
 #else
 static inline pthread_descr thread_segment(int seg)
 {
+# ifdef _STACK_GROWS_UP
+  return (pthread_descr)(THREAD_STACK_START_ADDRESS + (seg - 1) * STACK_SIZE)
+         + 1;
+# else
   return (pthread_descr)(THREAD_STACK_START_ADDRESS - (seg - 1) * STACK_SIZE)
          - 1;
+# endif
 }
 #endif
 
diff -urN glibc-2.3.2.orig/linuxthreads/pthread.c glibc-2.3.2/linuxthreads/pthread.c
--- glibc-2.3.2.orig/linuxthreads/pthread.c	2003-10-14 02:14:35.000000000 -0400
+++ glibc-2.3.2/linuxthreads/pthread.c	2003-10-14 02:16:35.000000000 -0400
@@ -841,7 +841,11 @@
   /* __pthread_handles[0] is the initial thread, __pthread_handles[1] is
      the manager threads handled specially in thread_self(), so start at 2 */
   h = __pthread_handles + 2;
+# ifdef _STACK_GROWS_UP
+  while (! (sp >= (char *) h->h_descr && sp < h->h_descr->p_guardaddr)) h++;
+# else
   while (! (sp <= (char *) h->h_descr && sp >= h->h_bottom)) h++;
+# endif
   return h->h_descr;
 }
 
@@ -856,11 +860,22 @@
     return manager_thread;
   h = __pthread_handles + 2;
 # ifdef USE_TLS
+#  ifdef _STACK_GROWS_UP
+  while (h->h_descr == NULL
+	 || ! (sp >= h->h_descr->p_stackaddr && 
+	       sp < h->h_descr->p_guardaddr))
+#  else
   while (h->h_descr == NULL
-	 || ! (sp <= (char *) h->h_descr->p_stackaddr && sp >= h->h_bottom))
+	 || ! (sp <= h->h_descr->p_stackaddr && 
+	       sp >= h->h_bottom))
+#  endif
     h++;
 # else
+#  ifdef _STACK_GROWS_UP
+  while (! (sp >= (char *) h->h_descr && sp < h->h_descr->p_guardaddr))
+#  else
   while (! (sp <= (char *) h->h_descr && sp >= h->h_bottom))
+#  endif
     h++;
 # endif
   return h->h_descr;

