--- libc-orig/elf/dl-runtime.c	2004-03-12 11:44:18.000000000 -0500
+++ libc/elf/dl-runtime.c	2004-06-19 18:13:33.000000000 -0400
@@ -137,12 +137,15 @@
 {
   void (*mcount_fct) (ElfW(Addr), ElfW(Addr)) = INTUSE(_dl_mcount);
   ElfW(Addr) *resultp;
-  lookup_t result;
+  lookup_t result = (lookup_t)(NULL);
   ElfW(Addr) value;
+  const PLTREL *const reloc
+    = (const void *) (D_PTR (l, l_info[DT_JMPREL]) + reloc_offset);
+  int reloc_result_pos = reloc_offset * ELF_MACHINE_SIZEOF_JMP_SLOT / sizeof(PLTREL);
 
   /* This is the address in the array where we store the result of previous
      relocations.  */
-  resultp = &l->l_reloc_result[reloc_offset / sizeof (PLTREL)];
+  resultp = l->l_reloc_result + reloc_result_pos;
 
   value = *resultp;
   if (value == 0)
@@ -152,8 +155,6 @@
 	= (const void *) D_PTR (l, l_info[DT_SYMTAB]);
       const char *strtab = (const void *) D_PTR (l, l_info[DT_STRTAB]);
 
-      const PLTREL *const reloc
-	= (const void *) (D_PTR (l, l_info[DT_JMPREL]) + reloc_offset);
       const ElfW(Sym) *sym = &symtab[ELFW(R_SYM) (reloc->r_info)];
 
       /* Sanity check that we're really looking at a PLT relocation.  */
@@ -208,7 +209,13 @@
 
   (*mcount_fct) (retaddr, value);
 
+#ifdef ELF_MACHINE_PROFILE_FIXUP_PLT
+  /* Fixup the l_reloc_result cache, not the real .got/.plt.
+     The "result" could be NULL if looking at a cached reloc. */
+  return ELF_MACHINE_PROFILE_FIXUP_PLT (l, result, reloc, resultp, value);
+#else
   return value;
+#endif
 }
 
 #endif /* PROF && ELF_MACHINE_NO_PLT */
