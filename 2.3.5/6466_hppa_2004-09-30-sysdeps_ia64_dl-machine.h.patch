--- libc-orig/sysdeps/ia64/dl-machine.h	2004-08-13 13:28:57.000000000 -0400
+++ libc/sysdeps/ia64/dl-machine.h	2004-08-13 13:28:12.000000000 -0400
@@ -447,6 +447,9 @@
 /* A reloc type used for ld.so cmdline arg lookups to reject PLT entries.  */
 #define ELF_MACHINE_JMP_SLOT	 R_IA64_IPLTLSB
 
+/* The profiler needs to build a cache of PLT entries of this size: */
+#define ELF_MACHINE_SIZEOF_JMP_SLOT (sizeof(Elf64_Addr)*2)
+
 /* According to the IA-64 specific documentation, Rela is always used.  */
 #define ELF_MACHINE_NO_REL 1
 
@@ -454,9 +457,6 @@
 #define ELF_MACHINE_START_ADDRESS(map, start)	\
   DL_STATIC_FUNCTION_ADDRESS (map, start)
 
-#define elf_machine_profile_fixup_plt(l, reloc, rel_addr, value) \
-  elf_machine_fixup_plt (l, reloc, rel_addr, value)
-
 #define elf_machine_profile_plt(reloc_addr) ((Elf64_Addr) (reloc_addr))
 
 /* Fixup a PLT entry to bounce directly to the function at VALUE.  */
@@ -475,6 +475,20 @@
   return (Elf64_Addr) reloc_addr;
 }
 
+/* Fixup a PLT cache entry when doing DSO profiling, if "t" is
+   null this indicates the result is cached. */
+#define ELF_MACHINE_PROFILE_FIXUP_PLT elf_machine_profile_fixup_plt
+static inline Elf64_Addr
+elf_machine_profile_fixup_plt (struct link_map *l, lookup_t t,
+		       const Elf64_Rela *reloc,
+		       Elf64_Addr *reloc_addr, Elf64_Addr value)
+{
+  if (__builtin_expect(t == NULL,1))
+    return (Elf64_Addr) reloc_addr;
+  
+  return elf_machine_fixup_plt(l, t, reloc, reloc_addr, value);
+}
+
 /* Return the final value of a plt relocation.  */
 static inline Elf64_Addr
 elf_machine_plt_value (struct link_map *map, const Elf64_Rela *reloc,
