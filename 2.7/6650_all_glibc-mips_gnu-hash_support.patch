Add support for GNU_HASH on mips

http://sourceware.org/ml/binutils/2007-08/msg00387.html

--- glibc-2.6.1/elf/elf.h
+++ glibc-2.6.1/elf/elf.h
@@ -1380,6 +1380,7 @@ typedef struct
 #define STO_MIPS_INTERNAL		0x1
 #define STO_MIPS_HIDDEN			0x2
 #define STO_MIPS_PROTECTED		0x3
+#define STO_MIPS_GNUHASH		(1 << 3)
 #define STO_MIPS_SC_ALIGN_UNUSED	0xff
 
 /* MIPS specific values for `st_info'.  */
--- glibc-2.6.1/ports/sysdeps/mips/dl-machine.h
+++ glibc-2.6.1/ports/sysdeps/mips/dl-machine.h
@@ -536,6 +536,7 @@ elf_machine_got_rel (struct link_map *ma
   ElfW(Sym) *sym;
   const ElfW(Half) *vernum;
   int i, n, symidx;
+  int is_gnuhash;
 
 #define RESOLVE_GOTSYM(sym,vernum,sym_index)				  \
     ({									  \
@@ -578,10 +579,18 @@ elf_machine_got_rel (struct link_map *ma
   sym = (ElfW(Sym) *) D_PTR (map, l_info[DT_SYMTAB]) + symidx;
   i = (map->l_info[DT_MIPS (SYMTABNO)]->d_un.d_val
        - map->l_info[DT_MIPS (GOTSYM)]->d_un.d_val);
+  /* check hash style */
+  is_gnuhash = map->l_info[DT_ADDRTAGIDX (DT_GNU_HASH) + DT_NUM
+			   + DT_THISPROCNUM + DT_VERSIONTAGNUM
+			   + DT_EXTRANUM + DT_VALNUM];
 
   /* This loop doesn't handle Quickstart.  */
   while (i--)
     {
+      /* in gnu hash, skip symbol that doesn't need GOT entries */
+      if (is_gnuhash && (sym->st_other & STO_MIPS_GNUHASH) != STO_MIPS_GNUHASH)
+	goto skip;
+
       if (sym->st_shndx == SHN_UNDEF)
 	{
 	  if (ELFW(ST_TYPE) (sym->st_info) == STT_FUNC
@@ -604,6 +613,7 @@ elf_machine_got_rel (struct link_map *ma
       else
 	*got = RESOLVE_GOTSYM (sym, vernum, symidx);
 
+  skip:
       ++got;
       ++sym;
       ++symidx;
