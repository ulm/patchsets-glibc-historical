From d0f6ed789f460357fca11f8ffcffcb968d8d7434 Mon Sep 17 00:00:00 2001
From: Jakub Jelinek <jakub@redhat.com>
Date: Tue, 16 Jun 2009 10:23:31 -0700
Subject: [PATCH 041/100] Fix x86-64 memchr for large lengths.

(cherry picked from commit fab8238de69de67637d21923b3ec1c26e4ce8450)
---
 ChangeLog               |    7 +++++++
 string/test-memchr.c    |    9 +++++++--
 sysdeps/x86_64/memchr.S |    6 +++---
 3 files changed, 17 insertions(+), 5 deletions(-)

2009-06-16  Jakub Jelinek  <jakub@redhat.com>

	* sysdeps/x86_64/memchr.S (memchr): Use unsigned instead of signed
	comparisons.
	* string/test-memchr.c (do_random_tests): Test very large lengths
	as well.

diff --git a/string/test-memchr.c b/string/test-memchr.c
index c233ead..cd9a01e 100644
--- a/string/test-memchr.c
+++ b/string/test-memchr.c
@@ -1,5 +1,5 @@
 /* Test and measure memchr functions.
-   Copyright (C) 1999, 2002, 2003, 2005 Free Software Foundation, Inc.
+   Copyright (C) 1999, 2002, 2003, 2005, 2009 Free Software Foundation, Inc.
    This file is part of the GNU C Library.
    Written by Jakub Jelinek <jakub@redhat.com>, 1999.
 
@@ -144,7 +144,12 @@ do_random_tests (void)
 	}
 
       if (pos < len)
-	result = (char *) (p + pos + align);
+	{
+	  size_t r = random ();
+	  if ((r & 31) == 0)
+	    len = ~(uintptr_t) (p + align) - ((r >> 5) & 31);
+	  result = (char *) (p + pos + align);
+	}
       else
 	result = NULL;
 
diff --git a/sysdeps/x86_64/memchr.S b/sysdeps/x86_64/memchr.S
index 54b7af5..6082aa7 100644
--- a/sysdeps/x86_64/memchr.S
+++ b/sysdeps/x86_64/memchr.S
@@ -41,7 +41,7 @@ ENTRY (memchr)
 	movl	$16, %esi
 	jnz	1f
 	cmpq	%rsi, %rdx
-	jle	3f
+	jbe	3f
 
 2:	movdqa	(%rdi,%rsi), %xmm0
 	leaq	16(%rsi), %rsi
@@ -50,7 +50,7 @@ ENTRY (memchr)
 	testl	%ecx, %ecx
 	jnz	1f
 	cmpq	%rsi, %rdx
-	jg	2b
+	ja	2b
 
 3:	xorl	%eax, %eax
 	ret
@@ -60,7 +60,7 @@ ENTRY (memchr)
 	addq	%rcx, %rax
 	leaq	-16(%rsi,%rcx), %rsi
 	cmpq	%rsi, %rdx
-	jle	3b
+	jbe	3b
 	ret
 END (memchr)
 
-- 
1.6.5.2

